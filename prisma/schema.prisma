// Prisma Schema para MVP: Roles + Usuarios + Servicios + Reservas

datasource db {
  provider = "sqlite" // Cambia a "postgresql" en producci√≥n
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Rol {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  usuarios    User[]
}

model User {
  id        Int              @id @default(autoincrement())
  nombre    String
  email     String           @unique
  rol_id    Int
  Rol       Rol              @relation(fields: [rol_id], references: [id])
  servicios TrainerService[]
  reservas  Reservation[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model Service {
  id           Int              @id @default(autoincrement())
  nombre       String
  descripcion  String?
  precio       Float?
  entrenadores TrainerService[]
  reservas     Reservation[]
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
}

model TrainerService {
  id          Int      @id @default(autoincrement())
  trainer_id  Int
  service_id  Int
  activo      Boolean  @default(true)
  entrenador  User     @relation(fields: [trainer_id], references: [id])
  servicio    Service  @relation(fields: [service_id], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Reservation {
  id              Int      @id @default(autoincrement())
  cliente_nombre  String
  cliente_email   String
  fecha_preferida DateTime
  mensaje         String?
  trainer_id      Int
  service_id      Int
  entrenador      User     @relation(fields: [trainer_id], references: [id])
  servicio        Service  @relation(fields: [service_id], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
